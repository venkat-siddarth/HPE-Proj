# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import products_pb2 as products__pb2


class productfuncsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getproductlist = channel.unary_unary(
                '/productfuncs/getproductlist',
                request_serializer=products__pb2.latestProductsRequest.SerializeToString,
                response_deserializer=products__pb2.latestProductsResponse.FromString,
                )
        self.getproductdetails = channel.unary_unary(
                '/productfuncs/getproductdetails',
                request_serializer=products__pb2.productDetailsRequest.SerializeToString,
                response_deserializer=products__pb2.productDetailsResponse.FromString,
                )
        self.search = channel.unary_unary(
                '/productfuncs/search',
                request_serializer=products__pb2.searchRequest.SerializeToString,
                response_deserializer=products__pb2.searchResponse.FromString,
                )
        self.id = channel.unary_unary(
                '/productfuncs/id',
                request_serializer=products__pb2.prodIDRequest.SerializeToString,
                response_deserializer=products__pb2.prodIDResponse.FromString,
                )
        self.getcategorylist = channel.unary_unary(
                '/productfuncs/getcategorylist',
                request_serializer=products__pb2.CategoryProductsRequest.SerializeToString,
                response_deserializer=products__pb2.CategoryProductsResponse.FromString,
                )


class productfuncsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getproductlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getproductdetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getcategorylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_productfuncsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getproductlist': grpc.unary_unary_rpc_method_handler(
                    servicer.getproductlist,
                    request_deserializer=products__pb2.latestProductsRequest.FromString,
                    response_serializer=products__pb2.latestProductsResponse.SerializeToString,
            ),
            'getproductdetails': grpc.unary_unary_rpc_method_handler(
                    servicer.getproductdetails,
                    request_deserializer=products__pb2.productDetailsRequest.FromString,
                    response_serializer=products__pb2.productDetailsResponse.SerializeToString,
            ),
            'search': grpc.unary_unary_rpc_method_handler(
                    servicer.search,
                    request_deserializer=products__pb2.searchRequest.FromString,
                    response_serializer=products__pb2.searchResponse.SerializeToString,
            ),
            'id': grpc.unary_unary_rpc_method_handler(
                    servicer.id,
                    request_deserializer=products__pb2.prodIDRequest.FromString,
                    response_serializer=products__pb2.prodIDResponse.SerializeToString,
            ),
            'getcategorylist': grpc.unary_unary_rpc_method_handler(
                    servicer.getcategorylist,
                    request_deserializer=products__pb2.CategoryProductsRequest.FromString,
                    response_serializer=products__pb2.CategoryProductsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'productfuncs', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class productfuncs(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getproductlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productfuncs/getproductlist',
            products__pb2.latestProductsRequest.SerializeToString,
            products__pb2.latestProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getproductdetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productfuncs/getproductdetails',
            products__pb2.productDetailsRequest.SerializeToString,
            products__pb2.productDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productfuncs/search',
            products__pb2.searchRequest.SerializeToString,
            products__pb2.searchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productfuncs/id',
            products__pb2.prodIDRequest.SerializeToString,
            products__pb2.prodIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getcategorylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productfuncs/getcategorylist',
            products__pb2.CategoryProductsRequest.SerializeToString,
            products__pb2.CategoryProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
